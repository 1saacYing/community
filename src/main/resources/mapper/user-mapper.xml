<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!--        //[1.5 Mybatis入门]-->
<mapper namespace="com.nowcoder.community.dao.UserMapper">

<!--    <select id="selectById" resultType="com.nowcoder.community.entity.User">-->
<!--        select id, username, password, salt, email, type, status, activation_code, header_url, create_time-->
<!--        from user-->
<!--        where id = #{id}-->
<!--    </select>-->
<!--    <select id="selectByName" resultType="com.nowcoder.community.entity.User">-->
<!--        select id, username, password, salt, email, type, status, activation_code, header_url, create_time-->
<!--        from user-->
<!--        where username = #{username}-->
<!--    </select>-->
<!--    <select id="selectByEmail" resultType="com.nowcoder.community.entity.User">-->
<!--        select id, username, password, salt, email, type, status, activation_code, header_url, create_time-->
<!--        from user-->
<!--        where email = #{email}-->
<!--    </select>-->

<!--    优化方法-->
    <sql id="selectFields">
        id, username, password, salt, email, type, status, activation_code, header_url, create_time
    </sql>


<!--    Java 基本类型字段若未赋值，默认为对应初始值（如 int 为 0，boolean 为 false），MyBatis 会将其插入数据库；引用类型如 String、Date 默认为 null，MyBatis 会插入 NULL -->
    <sql id="insertFields">
        username, password, salt, email, type, status, activation_code, header_url, create_time
    </sql>

    <select id="selectById" resultType="com.nowcoder.community.entity.User">
        select <include refid="selectFields"></include>
        from user
        where id = #{id}
    </select>

    <select id="selectByName" resultType="com.nowcoder.community.entity.User">
        select <include refid="selectFields"></include>
        from user
        where username = #{username}
        limit 1
    </select>

    <!-- 查询邮箱对应的用户，LIMIT 1 确保service中验证邮箱方法报错正常，但是实际情况数据库邮箱不会出现重复 -->
    <!-- 避免 TooManyResultsException 异常，确保 selectOne() 方法正常工作 -->
    <select id="selectByEmail" resultType="com.nowcoder.community.entity.User">
        select <include refid="selectFields"></include>
        from user
        where email = #{email}
        limit 1
    </select>

<!--    复杂的入参需要申明parameterType，对应主键keyProperty，用于mybits从mysql获取id-->
    <insert id="insertUser" parameterType="com.nowcoder.community.entity.User" keyProperty="id">
        insert into user (<include refid="insertFields"></include>)
<!--        这里是entity类中的属性，驼峰命名-->
        values(#{username}, #{password}, #{salt}, #{email}, #{type}, #{status}, #{activationCode}, #{headerUrl}, #{createTime})
    </insert>

    <update id="updateStatus">
        update user set status = #{status} where id = #{id}
    </update>

    <update id="updateHeader">
        update user set header_url = #{headerUrl} where id = #{id}
    </update>

    <update id="updatePassword">
        update user set password = #{password} where id = #{id}
    </update>


</mapper>